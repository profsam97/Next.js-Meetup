{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\proft\\\\OneDrive\\\\Documents\\\\react\\\\Next.js\\\\Next.jsChap23part2\\\\pages\\\\index.js\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport MeetupsCollections from '../../components/MongodbConnect';\nconst DUMMY_MEALS = [{\n  id: 'm2',\n  title: 'A First Meetup',\n  image: 'https://source.unsplash.com/random/1280x720?sig=incrementingIdentifier',\n  address: 'Idiroko street mile 2, Ikeja',\n  description: 'This is the first meet up'\n}, {\n  id: 'm4',\n  title: 'Another Meetup',\n  image: 'https://source.unsplash.com/random/1280x720?sig=2',\n  address: 'Saint Luiz street, Califonia',\n  description: 'This is the second meet up'\n}];\n\nfunction Homepage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 12\n  }, this);\n} //better if you have lot of incoming request and you need to connect with node.js/express\n// export async function getServerSideProps(context){\n//     const req = context.req;\n//     const res = context.res;\n//     return {\n//         props: {\n//             meetups: DUMMY_MEALS\n//         }\n//     }\n// }\n//better if data dont change alot\n\n\nexport async function getStaticProps() {\n  const meetups = MeetupsCollections.find().toArray();\n  return {\n    props: {\n      meetups: meetups.map(meetups => ({\n        id: meetups._id.toString(),\n        title: meetups.title,\n        address: meetups.address,\n        image: meetups.image\n      }))\n    },\n    //revalidate allows us to re-render the initial props, when an incoming request is made\n    revalidate: 5\n  };\n}\nexport default Homepage;","map":{"version":3,"sources":["C:/Users/proft/OneDrive/Documents/react/Next.js/Next.jsChap23part2/pages/index.js"],"names":["MeetupList","MeetupsCollections","DUMMY_MEALS","id","title","image","address","description","Homepage","props","meetups","getStaticProps","find","toArray","map","_id","toString","revalidate"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AACA,MAAMC,WAAW,GAAG,CAChB;AACIC,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,KAAK,EAAE,gBAFX;AAGIC,EAAAA,KAAK,EAAE,wEAHX;AAIIC,EAAAA,OAAO,EAAE,8BAJb;AAKIC,EAAAA,WAAW,EAAE;AALjB,CADgB,EAQf;AACGJ,EAAAA,EAAE,EAAE,IADP;AAEGC,EAAAA,KAAK,EAAE,gBAFV;AAGGC,EAAAA,KAAK,EAAE,mDAHV;AAIGC,EAAAA,OAAO,EAAE,8BAJZ;AAKGC,EAAAA,WAAW,EAAE;AALhB,CARe,CAApB;;AAgBA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AACpB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,C,CACD;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMD,OAAO,GAAGT,kBAAkB,CAACW,IAAnB,GAA0BC,OAA1B,EAAhB;AACA,SAAO;AACHJ,IAAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAEA,OAAO,CAACI,GAAR,CAAYJ,OAAO,KAAK;AAC7BP,QAAAA,EAAE,EAAEO,OAAO,CAACK,GAAR,CAAYC,QAAZ,EADyB;AAE7BZ,QAAAA,KAAK,EAAEM,OAAO,CAACN,KAFc;AAG7BE,QAAAA,OAAO,EAAEI,OAAO,CAACJ,OAHY;AAI7BD,QAAAA,KAAK,EAAEK,OAAO,CAACL;AAJc,OAAL,CAAnB;AADN,KADJ;AASH;AACAY,IAAAA,UAAU,EAAE;AAVT,GAAP;AAYH;AACD,eAAeT,QAAf","sourcesContent":["import MeetupList from \"../components/meetups/MeetupList\"\r\nimport MeetupsCollections from '../../components/MongodbConnect';\r\nconst DUMMY_MEALS = [\r\n    {\r\n        id: 'm2',\r\n        title: 'A First Meetup',\r\n        image: 'https://source.unsplash.com/random/1280x720?sig=incrementingIdentifier',\r\n        address: 'Idiroko street mile 2, Ikeja',\r\n        description: 'This is the first meet up'\r\n    },\r\n     {\r\n        id: 'm4',\r\n        title: 'Another Meetup',\r\n        image: 'https://source.unsplash.com/random/1280x720?sig=2',\r\n        address: 'Saint Luiz street, Califonia',\r\n        description: 'This is the second meet up'\r\n    }\r\n];\r\nfunction Homepage(props){\r\n    return <MeetupList meetups={props.meetups}/>\r\n}\r\n//better if you have lot of incoming request and you need to connect with node.js/express\r\n// export async function getServerSideProps(context){\r\n//     const req = context.req;\r\n//     const res = context.res;\r\n\r\n//     return {\r\n//         props: {\r\n//             meetups: DUMMY_MEALS\r\n//         }\r\n//     }\r\n// }\r\n//better if data dont change alot\r\nexport async function getStaticProps() {\r\n    const meetups = MeetupsCollections.find().toArray();\r\n    return {\r\n        props: {\r\n            meetups: meetups.map(meetups => ({\r\n                id: meetups._id.toString(),\r\n                title: meetups.title,\r\n                address: meetups.address,\r\n                image: meetups.image\r\n            }))\r\n        },\r\n        //revalidate allows us to re-render the initial props, when an incoming request is made\r\n        revalidate: 5\r\n    }\r\n}\r\nexport default Homepage;"]},"metadata":{},"sourceType":"module"}